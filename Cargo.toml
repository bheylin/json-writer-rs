[package]
name = "json-writer"
version = "0.4.0"
edition = "2021"
description = "Simple and fast crate for writing JSON to a string without creating intermediate objects"
license = "Unlicense"
categories = [ "encoding" ]
repository = "https://github.com/zotta/json-writer-rs"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
itoa = "1.0.11"
ryu = "1.0.18"

[lints.rust]
dead_code = "warn"
future_incompatible = { level = "warn", priority = -1 }
let_underscore = { level = "warn", priority = -1 }
nonstandard-style = "warn"
rust_2021_compatibility = { level = "warn", priority = -1 }
trivial_casts = "warn"
trivial_numeric_casts = "warn"
rust_2018_compatibility = { level = "warn", priority = -1 }
rust_2018_idioms = { level = "warn", priority = -1 }
semicolon_in_expressions_from_macros = "warn"
unreachable_pub = "warn"
unsafe_code = "allow"
unused_import_braces = "warn"
unused_lifetimes = "warn"
unused_macro_rules = "warn"
unused_qualifications = "warn"
unused = { level = "warn", priority = -1 }

# This list is based off Embarks clippy list
#
# https://github.com/EmbarkStudios/rust-ecosystem/blob/main/lints.rs
#
# You can lookup the motivation for each clippy here:
# https://rust-lang.github.io/rust-clippy/master/index.html
[lints.clippy]
complexity = { level = "warn", priority = -1 }
correctness = { level = "deny", priority = -1 }
perf = { level = "deny", priority = -1 }
restriction = { level = "allow", priority = -1 }
style = { level = "warn", priority = -1 }
suspicious = { level = "warn", priority = -1 }

doc_markdown = "allow"

await_holding_lock = "warn"
char_lit_as_u8 = "warn"
checked_conversions = "warn"
dbg_macro = "warn"
debug_assert_with_mut_call = "warn"
disallowed_macros = "warn"
disallowed_methods = "warn"
disallowed_types = "warn"
empty_enum = "warn"
enum_glob_use = "warn"
exit = "warn"
explicit_deref_methods = "warn"
explicit_into_iter_loop = "warn"
expl_impl_clone_on_copy = "warn"
fallible_impl_from = "warn"
filter_map_next = "warn"
flat_map_option = "warn"
float_cmp_const = "warn"
fn_params_excessive_bools = "warn"
from_iter_instead_of_collect = "warn"
if_let_mutex = "warn"
implicit_clone = "warn"
imprecise_flops = "warn"
inefficient_to_string = "warn"
invalid_upcast_comparisons = "warn"
large_digit_groups = "warn"
large_stack_arrays = "warn"
large_types_passed_by_value = "warn"
let_unit_value = "warn"
linkedlist = "warn"
lossy_float_literal = "warn"
macro_use_imports = "warn"
manual_ok_or = "warn"
map_flatten = "warn"
match_on_vec_items = "warn"
match_same_arms = "warn"
match_wildcard_for_single_variants = "warn"
match_wild_err_arm = "warn"
mem_forget = "warn"
mismatched_target_os = "warn"
missing_enforced_import_renames = "warn"
mutex_integer = "warn"
mut_mut = "warn"
needless_continue = "warn"
needless_for_each = "warn"
needless_pass_by_value = "warn"
needless_return = "allow"
option_option = "warn"
path_buf_push_overwrite = "warn"
ptr_as_ptr = "warn"
rc_mutex = "warn"
ref_option_ref = "warn"
rest_pat_in_fully_bound_structs = "warn"
same_functions_in_if_condition = "warn"
semicolon_if_nothing_returned = "warn"
single_match_else = "warn"
string_add = "warn"
string_add_assign = "warn"
string_to_string = "warn"
todo = "warn"
trait_duplication_in_bounds = "warn"
unimplemented = "warn"
unnested_or_patterns = "warn"
unused_self = "warn"
useless_transmute = "warn"
verbose_file_reads = "warn"
zero_sized_map_values = "warn"
